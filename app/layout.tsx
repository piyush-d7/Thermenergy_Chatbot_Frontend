'use client'; // Required for using browser-only features like document
// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }

import { Inter } from "next/font/google";
import "./globals.css";
import { useEffect, useState } from "react";
import { createPortal } from "react-dom";

const inter = Inter({ subsets: ["latin"] });

export default function RootLayout({ children }) {
  const [mountNode, setMountNode] = useState(null);

  useEffect(() => {
    // This code runs in the browser. It finds the shadow DOM root.
    const shadowHost = document.getElementById('thermernergy-chatbot-root');
    if (shadowHost && shadowHost.shadowRoot) {
      const appContainer = shadowHost.shadowRoot.querySelector('#next-app-container');
      setMountNode(appContainer);
    }
  }, []);

  // The main body of your app, which will be "teleported" into the shadow DOM.
  const appBody = (
    <div className={inter.className}>
      {children}
    </div>
  );

  // If we are on the Vercel site itself, just render normally.
  // If mountNode is found (on the Divi site), use a portal to render into it.
  return (
    <>
      {mountNode ? createPortal(appBody, mountNode) : (
        <html lang="en">
          <body>{appBody}</body>
        </html>
      )}
    </>
  );
}